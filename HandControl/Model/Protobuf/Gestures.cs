// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: gestures.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace HandControl.Model.Protobuf {

  /// <summary>Holder for reflection information generated from gestures.proto</summary>
  public static partial class GesturesReflection {

    #region Descriptor
    /// <summary>File descriptor for gestures.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static GesturesReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg5nZXN0dXJlcy5wcm90bxIJdGVsZW1ldHJ5Ggp1dWlkLnByb3RvIksKC0dl",
            "dEdlc3R1cmVzEhYKDmxhc3RfdGltZV9zeW5jGAEgASgDEiQKCGdlc3R1cmVz",
            "GAIgAygLMhIudGVsZW1ldHJ5Lkdlc3R1cmUiRQoLU2F2ZUdlc3R1cmUSEQoJ",
            "dGltZV9zeW5jGAEgASgDEiMKB2dlc3R1cmUYAiABKAsyEi50ZWxlbWV0cnku",
            "R2VzdHVyZSI6Cg1EZWxldGVHZXN0dXJlEhEKCXRpbWVfc3luYxgBIAEoAxIW",
            "CgJpZBgCIAEoCzIKLnV1aWQuVVVJRCIsChJQZXJmb3JtR2VzdHVyZUJ5SWQS",
            "FgoCaWQYASABKAsyCi51dWlkLlVVSUQiOAoRUGVyZm9ybUdlc3R1cmVSYXcS",
            "IwoHZ2VzdHVyZRgBIAEoCzISLnRlbGVtZXRyeS5HZXN0dXJlIqwBCgxTZXRQ",
            "b3NpdGlvbnMSHwoXcG9pbnRlcl9maW5nZXJfcG9zaXRpb24YASABKAUSHgoW",
            "bWlkZGxlX2Zpbmdlcl9wb3NpdGlvbhgCIAEoBRIcChRyaW5nX2Zpbmdlcl9w",
            "b3NpdGlvbhgDIAEoBRIeChZsaXR0bGVfZmluZ2VyX3Bvc2l0aW9uGAQgASgF",
            "Eh0KFXRodW1iX2Zpbmdlcl9wb3NpdGlvbhgFIAEoBSKZAQoHR2VzdHVyZRIW",
            "CgJpZBgBIAEoCzIKLnV1aWQuVVVJRBIMCgRuYW1lGAIgASgJEhYKDmxhc3Rf",
            "dGltZV9zeW5jGAMgASgDEhAKCGl0ZXJhYmxlGAQgASgIEhMKC3JlcGV0aXRp",
            "b25zGAUgASgFEikKB2FjdGlvbnMYBiADKAsyGC50ZWxlbWV0cnkuR2VzdHVy",
            "ZUFjdGlvbiK8AQoNR2VzdHVyZUFjdGlvbhIfChdwb2ludGVyX2Zpbmdlcl9w",
            "b3NpdGlvbhgBIAEoBRIeChZtaWRkbGVfZmluZ2VyX3Bvc2l0aW9uGAIgASgF",
            "EhwKFHJpbmdfZmluZ2VyX3Bvc2l0aW9uGAMgASgFEh4KFmxpdHRsZV9maW5n",
            "ZXJfcG9zaXRpb24YBCABKAUSHQoVdGh1bWJfZmluZ2VyX3Bvc2l0aW9uGAUg",
            "ASgFEg0KBWRlbGF5GAYgASgFIiwKElVwZGF0ZUxhc3RUaW1lU3luYxIWCg5s",
            "YXN0X3RpbWVfc3luYxgBIAEoA0IdqgIaSGFuZENvbnRyb2wuTW9kZWwuUHJv",
            "dG9idWZiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::HandControl.Model.Protobuf.UuidReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::HandControl.Model.Protobuf.GetGestures), global::HandControl.Model.Protobuf.GetGestures.Parser, new[]{ "LastTimeSync", "Gestures" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HandControl.Model.Protobuf.SaveGesture), global::HandControl.Model.Protobuf.SaveGesture.Parser, new[]{ "TimeSync", "Gesture" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HandControl.Model.Protobuf.DeleteGesture), global::HandControl.Model.Protobuf.DeleteGesture.Parser, new[]{ "TimeSync", "Id" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HandControl.Model.Protobuf.PerformGestureById), global::HandControl.Model.Protobuf.PerformGestureById.Parser, new[]{ "Id" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HandControl.Model.Protobuf.PerformGestureRaw), global::HandControl.Model.Protobuf.PerformGestureRaw.Parser, new[]{ "Gesture" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HandControl.Model.Protobuf.SetPositions), global::HandControl.Model.Protobuf.SetPositions.Parser, new[]{ "PointerFingerPosition", "MiddleFingerPosition", "RingFingerPosition", "LittleFingerPosition", "ThumbFingerPosition" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HandControl.Model.Protobuf.Gesture), global::HandControl.Model.Protobuf.Gesture.Parser, new[]{ "Id", "Name", "LastTimeSync", "Iterable", "Repetitions", "Actions" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HandControl.Model.Protobuf.GestureAction), global::HandControl.Model.Protobuf.GestureAction.Parser, new[]{ "PointerFingerPosition", "MiddleFingerPosition", "RingFingerPosition", "LittleFingerPosition", "ThumbFingerPosition", "Delay" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HandControl.Model.Protobuf.UpdateLastTimeSync), global::HandControl.Model.Protobuf.UpdateLastTimeSync.Parser, new[]{ "LastTimeSync" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class GetGestures : pb::IMessage<GetGestures>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetGestures> _parser = new pb::MessageParser<GetGestures>(() => new GetGestures());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetGestures> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HandControl.Model.Protobuf.GesturesReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetGestures() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetGestures(GetGestures other) : this() {
      lastTimeSync_ = other.lastTimeSync_;
      gestures_ = other.gestures_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetGestures Clone() {
      return new GetGestures(this);
    }

    /// <summary>Field number for the "last_time_sync" field.</summary>
    public const int LastTimeSyncFieldNumber = 1;
    private long lastTimeSync_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long LastTimeSync {
      get { return lastTimeSync_; }
      set {
        lastTimeSync_ = value;
      }
    }

    /// <summary>Field number for the "gestures" field.</summary>
    public const int GesturesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::HandControl.Model.Protobuf.Gesture> _repeated_gestures_codec
        = pb::FieldCodec.ForMessage(18, global::HandControl.Model.Protobuf.Gesture.Parser);
    private readonly pbc::RepeatedField<global::HandControl.Model.Protobuf.Gesture> gestures_ = new pbc::RepeatedField<global::HandControl.Model.Protobuf.Gesture>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::HandControl.Model.Protobuf.Gesture> Gestures {
      get { return gestures_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetGestures);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetGestures other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (LastTimeSync != other.LastTimeSync) return false;
      if(!gestures_.Equals(other.gestures_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (LastTimeSync != 0L) hash ^= LastTimeSync.GetHashCode();
      hash ^= gestures_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (LastTimeSync != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(LastTimeSync);
      }
      gestures_.WriteTo(output, _repeated_gestures_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (LastTimeSync != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(LastTimeSync);
      }
      gestures_.WriteTo(ref output, _repeated_gestures_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (LastTimeSync != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(LastTimeSync);
      }
      size += gestures_.CalculateSize(_repeated_gestures_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetGestures other) {
      if (other == null) {
        return;
      }
      if (other.LastTimeSync != 0L) {
        LastTimeSync = other.LastTimeSync;
      }
      gestures_.Add(other.gestures_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            LastTimeSync = input.ReadInt64();
            break;
          }
          case 18: {
            gestures_.AddEntriesFrom(input, _repeated_gestures_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            LastTimeSync = input.ReadInt64();
            break;
          }
          case 18: {
            gestures_.AddEntriesFrom(ref input, _repeated_gestures_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SaveGesture : pb::IMessage<SaveGesture>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SaveGesture> _parser = new pb::MessageParser<SaveGesture>(() => new SaveGesture());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SaveGesture> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HandControl.Model.Protobuf.GesturesReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SaveGesture() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SaveGesture(SaveGesture other) : this() {
      timeSync_ = other.timeSync_;
      gesture_ = other.gesture_ != null ? other.gesture_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SaveGesture Clone() {
      return new SaveGesture(this);
    }

    /// <summary>Field number for the "time_sync" field.</summary>
    public const int TimeSyncFieldNumber = 1;
    private long timeSync_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TimeSync {
      get { return timeSync_; }
      set {
        timeSync_ = value;
      }
    }

    /// <summary>Field number for the "gesture" field.</summary>
    public const int GestureFieldNumber = 2;
    private global::HandControl.Model.Protobuf.Gesture gesture_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HandControl.Model.Protobuf.Gesture Gesture {
      get { return gesture_; }
      set {
        gesture_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SaveGesture);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SaveGesture other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TimeSync != other.TimeSync) return false;
      if (!object.Equals(Gesture, other.Gesture)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TimeSync != 0L) hash ^= TimeSync.GetHashCode();
      if (gesture_ != null) hash ^= Gesture.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (TimeSync != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(TimeSync);
      }
      if (gesture_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Gesture);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (TimeSync != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(TimeSync);
      }
      if (gesture_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Gesture);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TimeSync != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TimeSync);
      }
      if (gesture_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Gesture);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SaveGesture other) {
      if (other == null) {
        return;
      }
      if (other.TimeSync != 0L) {
        TimeSync = other.TimeSync;
      }
      if (other.gesture_ != null) {
        if (gesture_ == null) {
          Gesture = new global::HandControl.Model.Protobuf.Gesture();
        }
        Gesture.MergeFrom(other.Gesture);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TimeSync = input.ReadInt64();
            break;
          }
          case 18: {
            if (gesture_ == null) {
              Gesture = new global::HandControl.Model.Protobuf.Gesture();
            }
            input.ReadMessage(Gesture);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            TimeSync = input.ReadInt64();
            break;
          }
          case 18: {
            if (gesture_ == null) {
              Gesture = new global::HandControl.Model.Protobuf.Gesture();
            }
            input.ReadMessage(Gesture);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class DeleteGesture : pb::IMessage<DeleteGesture>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DeleteGesture> _parser = new pb::MessageParser<DeleteGesture>(() => new DeleteGesture());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteGesture> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HandControl.Model.Protobuf.GesturesReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteGesture() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteGesture(DeleteGesture other) : this() {
      timeSync_ = other.timeSync_;
      id_ = other.id_ != null ? other.id_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteGesture Clone() {
      return new DeleteGesture(this);
    }

    /// <summary>Field number for the "time_sync" field.</summary>
    public const int TimeSyncFieldNumber = 1;
    private long timeSync_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TimeSync {
      get { return timeSync_; }
      set {
        timeSync_ = value;
      }
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 2;
    private global::HandControl.Model.Protobuf.UUID id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HandControl.Model.Protobuf.UUID Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteGesture);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteGesture other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TimeSync != other.TimeSync) return false;
      if (!object.Equals(Id, other.Id)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TimeSync != 0L) hash ^= TimeSync.GetHashCode();
      if (id_ != null) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (TimeSync != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(TimeSync);
      }
      if (id_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (TimeSync != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(TimeSync);
      }
      if (id_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TimeSync != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TimeSync);
      }
      if (id_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteGesture other) {
      if (other == null) {
        return;
      }
      if (other.TimeSync != 0L) {
        TimeSync = other.TimeSync;
      }
      if (other.id_ != null) {
        if (id_ == null) {
          Id = new global::HandControl.Model.Protobuf.UUID();
        }
        Id.MergeFrom(other.Id);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TimeSync = input.ReadInt64();
            break;
          }
          case 18: {
            if (id_ == null) {
              Id = new global::HandControl.Model.Protobuf.UUID();
            }
            input.ReadMessage(Id);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            TimeSync = input.ReadInt64();
            break;
          }
          case 18: {
            if (id_ == null) {
              Id = new global::HandControl.Model.Protobuf.UUID();
            }
            input.ReadMessage(Id);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PerformGestureById : pb::IMessage<PerformGestureById>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PerformGestureById> _parser = new pb::MessageParser<PerformGestureById>(() => new PerformGestureById());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PerformGestureById> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HandControl.Model.Protobuf.GesturesReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PerformGestureById() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PerformGestureById(PerformGestureById other) : this() {
      id_ = other.id_ != null ? other.id_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PerformGestureById Clone() {
      return new PerformGestureById(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private global::HandControl.Model.Protobuf.UUID id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HandControl.Model.Protobuf.UUID Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PerformGestureById);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PerformGestureById other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Id, other.Id)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (id_ != null) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (id_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (id_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (id_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PerformGestureById other) {
      if (other == null) {
        return;
      }
      if (other.id_ != null) {
        if (id_ == null) {
          Id = new global::HandControl.Model.Protobuf.UUID();
        }
        Id.MergeFrom(other.Id);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (id_ == null) {
              Id = new global::HandControl.Model.Protobuf.UUID();
            }
            input.ReadMessage(Id);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (id_ == null) {
              Id = new global::HandControl.Model.Protobuf.UUID();
            }
            input.ReadMessage(Id);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PerformGestureRaw : pb::IMessage<PerformGestureRaw>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PerformGestureRaw> _parser = new pb::MessageParser<PerformGestureRaw>(() => new PerformGestureRaw());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PerformGestureRaw> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HandControl.Model.Protobuf.GesturesReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PerformGestureRaw() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PerformGestureRaw(PerformGestureRaw other) : this() {
      gesture_ = other.gesture_ != null ? other.gesture_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PerformGestureRaw Clone() {
      return new PerformGestureRaw(this);
    }

    /// <summary>Field number for the "gesture" field.</summary>
    public const int GestureFieldNumber = 1;
    private global::HandControl.Model.Protobuf.Gesture gesture_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HandControl.Model.Protobuf.Gesture Gesture {
      get { return gesture_; }
      set {
        gesture_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PerformGestureRaw);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PerformGestureRaw other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Gesture, other.Gesture)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (gesture_ != null) hash ^= Gesture.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (gesture_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Gesture);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (gesture_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Gesture);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (gesture_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Gesture);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PerformGestureRaw other) {
      if (other == null) {
        return;
      }
      if (other.gesture_ != null) {
        if (gesture_ == null) {
          Gesture = new global::HandControl.Model.Protobuf.Gesture();
        }
        Gesture.MergeFrom(other.Gesture);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (gesture_ == null) {
              Gesture = new global::HandControl.Model.Protobuf.Gesture();
            }
            input.ReadMessage(Gesture);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (gesture_ == null) {
              Gesture = new global::HandControl.Model.Protobuf.Gesture();
            }
            input.ReadMessage(Gesture);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SetPositions : pb::IMessage<SetPositions>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SetPositions> _parser = new pb::MessageParser<SetPositions>(() => new SetPositions());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SetPositions> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HandControl.Model.Protobuf.GesturesReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetPositions() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetPositions(SetPositions other) : this() {
      pointerFingerPosition_ = other.pointerFingerPosition_;
      middleFingerPosition_ = other.middleFingerPosition_;
      ringFingerPosition_ = other.ringFingerPosition_;
      littleFingerPosition_ = other.littleFingerPosition_;
      thumbFingerPosition_ = other.thumbFingerPosition_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetPositions Clone() {
      return new SetPositions(this);
    }

    /// <summary>Field number for the "pointer_finger_position" field.</summary>
    public const int PointerFingerPositionFieldNumber = 1;
    private int pointerFingerPosition_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PointerFingerPosition {
      get { return pointerFingerPosition_; }
      set {
        pointerFingerPosition_ = value;
      }
    }

    /// <summary>Field number for the "middle_finger_position" field.</summary>
    public const int MiddleFingerPositionFieldNumber = 2;
    private int middleFingerPosition_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MiddleFingerPosition {
      get { return middleFingerPosition_; }
      set {
        middleFingerPosition_ = value;
      }
    }

    /// <summary>Field number for the "ring_finger_position" field.</summary>
    public const int RingFingerPositionFieldNumber = 3;
    private int ringFingerPosition_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RingFingerPosition {
      get { return ringFingerPosition_; }
      set {
        ringFingerPosition_ = value;
      }
    }

    /// <summary>Field number for the "little_finger_position" field.</summary>
    public const int LittleFingerPositionFieldNumber = 4;
    private int littleFingerPosition_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int LittleFingerPosition {
      get { return littleFingerPosition_; }
      set {
        littleFingerPosition_ = value;
      }
    }

    /// <summary>Field number for the "thumb_finger_position" field.</summary>
    public const int ThumbFingerPositionFieldNumber = 5;
    private int thumbFingerPosition_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ThumbFingerPosition {
      get { return thumbFingerPosition_; }
      set {
        thumbFingerPosition_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SetPositions);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SetPositions other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PointerFingerPosition != other.PointerFingerPosition) return false;
      if (MiddleFingerPosition != other.MiddleFingerPosition) return false;
      if (RingFingerPosition != other.RingFingerPosition) return false;
      if (LittleFingerPosition != other.LittleFingerPosition) return false;
      if (ThumbFingerPosition != other.ThumbFingerPosition) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PointerFingerPosition != 0) hash ^= PointerFingerPosition.GetHashCode();
      if (MiddleFingerPosition != 0) hash ^= MiddleFingerPosition.GetHashCode();
      if (RingFingerPosition != 0) hash ^= RingFingerPosition.GetHashCode();
      if (LittleFingerPosition != 0) hash ^= LittleFingerPosition.GetHashCode();
      if (ThumbFingerPosition != 0) hash ^= ThumbFingerPosition.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (PointerFingerPosition != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PointerFingerPosition);
      }
      if (MiddleFingerPosition != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(MiddleFingerPosition);
      }
      if (RingFingerPosition != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(RingFingerPosition);
      }
      if (LittleFingerPosition != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(LittleFingerPosition);
      }
      if (ThumbFingerPosition != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(ThumbFingerPosition);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (PointerFingerPosition != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PointerFingerPosition);
      }
      if (MiddleFingerPosition != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(MiddleFingerPosition);
      }
      if (RingFingerPosition != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(RingFingerPosition);
      }
      if (LittleFingerPosition != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(LittleFingerPosition);
      }
      if (ThumbFingerPosition != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(ThumbFingerPosition);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PointerFingerPosition != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PointerFingerPosition);
      }
      if (MiddleFingerPosition != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MiddleFingerPosition);
      }
      if (RingFingerPosition != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RingFingerPosition);
      }
      if (LittleFingerPosition != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LittleFingerPosition);
      }
      if (ThumbFingerPosition != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ThumbFingerPosition);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SetPositions other) {
      if (other == null) {
        return;
      }
      if (other.PointerFingerPosition != 0) {
        PointerFingerPosition = other.PointerFingerPosition;
      }
      if (other.MiddleFingerPosition != 0) {
        MiddleFingerPosition = other.MiddleFingerPosition;
      }
      if (other.RingFingerPosition != 0) {
        RingFingerPosition = other.RingFingerPosition;
      }
      if (other.LittleFingerPosition != 0) {
        LittleFingerPosition = other.LittleFingerPosition;
      }
      if (other.ThumbFingerPosition != 0) {
        ThumbFingerPosition = other.ThumbFingerPosition;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PointerFingerPosition = input.ReadInt32();
            break;
          }
          case 16: {
            MiddleFingerPosition = input.ReadInt32();
            break;
          }
          case 24: {
            RingFingerPosition = input.ReadInt32();
            break;
          }
          case 32: {
            LittleFingerPosition = input.ReadInt32();
            break;
          }
          case 40: {
            ThumbFingerPosition = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PointerFingerPosition = input.ReadInt32();
            break;
          }
          case 16: {
            MiddleFingerPosition = input.ReadInt32();
            break;
          }
          case 24: {
            RingFingerPosition = input.ReadInt32();
            break;
          }
          case 32: {
            LittleFingerPosition = input.ReadInt32();
            break;
          }
          case 40: {
            ThumbFingerPosition = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Gesture : pb::IMessage<Gesture>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Gesture> _parser = new pb::MessageParser<Gesture>(() => new Gesture());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Gesture> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HandControl.Model.Protobuf.GesturesReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Gesture() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Gesture(Gesture other) : this() {
      id_ = other.id_ != null ? other.id_.Clone() : null;
      name_ = other.name_;
      lastTimeSync_ = other.lastTimeSync_;
      iterable_ = other.iterable_;
      repetitions_ = other.repetitions_;
      actions_ = other.actions_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Gesture Clone() {
      return new Gesture(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private global::HandControl.Model.Protobuf.UUID id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HandControl.Model.Protobuf.UUID Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "last_time_sync" field.</summary>
    public const int LastTimeSyncFieldNumber = 3;
    private long lastTimeSync_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long LastTimeSync {
      get { return lastTimeSync_; }
      set {
        lastTimeSync_ = value;
      }
    }

    /// <summary>Field number for the "iterable" field.</summary>
    public const int IterableFieldNumber = 4;
    private bool iterable_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Iterable {
      get { return iterable_; }
      set {
        iterable_ = value;
      }
    }

    /// <summary>Field number for the "repetitions" field.</summary>
    public const int RepetitionsFieldNumber = 5;
    private int repetitions_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Repetitions {
      get { return repetitions_; }
      set {
        repetitions_ = value;
      }
    }

    /// <summary>Field number for the "actions" field.</summary>
    public const int ActionsFieldNumber = 6;
    private static readonly pb::FieldCodec<global::HandControl.Model.Protobuf.GestureAction> _repeated_actions_codec
        = pb::FieldCodec.ForMessage(50, global::HandControl.Model.Protobuf.GestureAction.Parser);
    private readonly pbc::RepeatedField<global::HandControl.Model.Protobuf.GestureAction> actions_ = new pbc::RepeatedField<global::HandControl.Model.Protobuf.GestureAction>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::HandControl.Model.Protobuf.GestureAction> Actions {
      get { return actions_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Gesture);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Gesture other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Id, other.Id)) return false;
      if (Name != other.Name) return false;
      if (LastTimeSync != other.LastTimeSync) return false;
      if (Iterable != other.Iterable) return false;
      if (Repetitions != other.Repetitions) return false;
      if(!actions_.Equals(other.actions_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (id_ != null) hash ^= Id.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (LastTimeSync != 0L) hash ^= LastTimeSync.GetHashCode();
      if (Iterable != false) hash ^= Iterable.GetHashCode();
      if (Repetitions != 0) hash ^= Repetitions.GetHashCode();
      hash ^= actions_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (id_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (LastTimeSync != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(LastTimeSync);
      }
      if (Iterable != false) {
        output.WriteRawTag(32);
        output.WriteBool(Iterable);
      }
      if (Repetitions != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Repetitions);
      }
      actions_.WriteTo(output, _repeated_actions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (id_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (LastTimeSync != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(LastTimeSync);
      }
      if (Iterable != false) {
        output.WriteRawTag(32);
        output.WriteBool(Iterable);
      }
      if (Repetitions != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Repetitions);
      }
      actions_.WriteTo(ref output, _repeated_actions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (id_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Id);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (LastTimeSync != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(LastTimeSync);
      }
      if (Iterable != false) {
        size += 1 + 1;
      }
      if (Repetitions != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Repetitions);
      }
      size += actions_.CalculateSize(_repeated_actions_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Gesture other) {
      if (other == null) {
        return;
      }
      if (other.id_ != null) {
        if (id_ == null) {
          Id = new global::HandControl.Model.Protobuf.UUID();
        }
        Id.MergeFrom(other.Id);
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.LastTimeSync != 0L) {
        LastTimeSync = other.LastTimeSync;
      }
      if (other.Iterable != false) {
        Iterable = other.Iterable;
      }
      if (other.Repetitions != 0) {
        Repetitions = other.Repetitions;
      }
      actions_.Add(other.actions_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (id_ == null) {
              Id = new global::HandControl.Model.Protobuf.UUID();
            }
            input.ReadMessage(Id);
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 24: {
            LastTimeSync = input.ReadInt64();
            break;
          }
          case 32: {
            Iterable = input.ReadBool();
            break;
          }
          case 40: {
            Repetitions = input.ReadInt32();
            break;
          }
          case 50: {
            actions_.AddEntriesFrom(input, _repeated_actions_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (id_ == null) {
              Id = new global::HandControl.Model.Protobuf.UUID();
            }
            input.ReadMessage(Id);
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 24: {
            LastTimeSync = input.ReadInt64();
            break;
          }
          case 32: {
            Iterable = input.ReadBool();
            break;
          }
          case 40: {
            Repetitions = input.ReadInt32();
            break;
          }
          case 50: {
            actions_.AddEntriesFrom(ref input, _repeated_actions_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GestureAction : pb::IMessage<GestureAction>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GestureAction> _parser = new pb::MessageParser<GestureAction>(() => new GestureAction());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GestureAction> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HandControl.Model.Protobuf.GesturesReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GestureAction() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GestureAction(GestureAction other) : this() {
      pointerFingerPosition_ = other.pointerFingerPosition_;
      middleFingerPosition_ = other.middleFingerPosition_;
      ringFingerPosition_ = other.ringFingerPosition_;
      littleFingerPosition_ = other.littleFingerPosition_;
      thumbFingerPosition_ = other.thumbFingerPosition_;
      delay_ = other.delay_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GestureAction Clone() {
      return new GestureAction(this);
    }

    /// <summary>Field number for the "pointer_finger_position" field.</summary>
    public const int PointerFingerPositionFieldNumber = 1;
    private int pointerFingerPosition_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PointerFingerPosition {
      get { return pointerFingerPosition_; }
      set {
        pointerFingerPosition_ = value;
      }
    }

    /// <summary>Field number for the "middle_finger_position" field.</summary>
    public const int MiddleFingerPositionFieldNumber = 2;
    private int middleFingerPosition_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MiddleFingerPosition {
      get { return middleFingerPosition_; }
      set {
        middleFingerPosition_ = value;
      }
    }

    /// <summary>Field number for the "ring_finger_position" field.</summary>
    public const int RingFingerPositionFieldNumber = 3;
    private int ringFingerPosition_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RingFingerPosition {
      get { return ringFingerPosition_; }
      set {
        ringFingerPosition_ = value;
      }
    }

    /// <summary>Field number for the "little_finger_position" field.</summary>
    public const int LittleFingerPositionFieldNumber = 4;
    private int littleFingerPosition_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int LittleFingerPosition {
      get { return littleFingerPosition_; }
      set {
        littleFingerPosition_ = value;
      }
    }

    /// <summary>Field number for the "thumb_finger_position" field.</summary>
    public const int ThumbFingerPositionFieldNumber = 5;
    private int thumbFingerPosition_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ThumbFingerPosition {
      get { return thumbFingerPosition_; }
      set {
        thumbFingerPosition_ = value;
      }
    }

    /// <summary>Field number for the "delay" field.</summary>
    public const int DelayFieldNumber = 6;
    private int delay_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Delay {
      get { return delay_; }
      set {
        delay_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GestureAction);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GestureAction other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PointerFingerPosition != other.PointerFingerPosition) return false;
      if (MiddleFingerPosition != other.MiddleFingerPosition) return false;
      if (RingFingerPosition != other.RingFingerPosition) return false;
      if (LittleFingerPosition != other.LittleFingerPosition) return false;
      if (ThumbFingerPosition != other.ThumbFingerPosition) return false;
      if (Delay != other.Delay) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PointerFingerPosition != 0) hash ^= PointerFingerPosition.GetHashCode();
      if (MiddleFingerPosition != 0) hash ^= MiddleFingerPosition.GetHashCode();
      if (RingFingerPosition != 0) hash ^= RingFingerPosition.GetHashCode();
      if (LittleFingerPosition != 0) hash ^= LittleFingerPosition.GetHashCode();
      if (ThumbFingerPosition != 0) hash ^= ThumbFingerPosition.GetHashCode();
      if (Delay != 0) hash ^= Delay.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (PointerFingerPosition != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PointerFingerPosition);
      }
      if (MiddleFingerPosition != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(MiddleFingerPosition);
      }
      if (RingFingerPosition != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(RingFingerPosition);
      }
      if (LittleFingerPosition != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(LittleFingerPosition);
      }
      if (ThumbFingerPosition != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(ThumbFingerPosition);
      }
      if (Delay != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Delay);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (PointerFingerPosition != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PointerFingerPosition);
      }
      if (MiddleFingerPosition != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(MiddleFingerPosition);
      }
      if (RingFingerPosition != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(RingFingerPosition);
      }
      if (LittleFingerPosition != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(LittleFingerPosition);
      }
      if (ThumbFingerPosition != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(ThumbFingerPosition);
      }
      if (Delay != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Delay);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PointerFingerPosition != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PointerFingerPosition);
      }
      if (MiddleFingerPosition != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MiddleFingerPosition);
      }
      if (RingFingerPosition != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RingFingerPosition);
      }
      if (LittleFingerPosition != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LittleFingerPosition);
      }
      if (ThumbFingerPosition != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ThumbFingerPosition);
      }
      if (Delay != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Delay);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GestureAction other) {
      if (other == null) {
        return;
      }
      if (other.PointerFingerPosition != 0) {
        PointerFingerPosition = other.PointerFingerPosition;
      }
      if (other.MiddleFingerPosition != 0) {
        MiddleFingerPosition = other.MiddleFingerPosition;
      }
      if (other.RingFingerPosition != 0) {
        RingFingerPosition = other.RingFingerPosition;
      }
      if (other.LittleFingerPosition != 0) {
        LittleFingerPosition = other.LittleFingerPosition;
      }
      if (other.ThumbFingerPosition != 0) {
        ThumbFingerPosition = other.ThumbFingerPosition;
      }
      if (other.Delay != 0) {
        Delay = other.Delay;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PointerFingerPosition = input.ReadInt32();
            break;
          }
          case 16: {
            MiddleFingerPosition = input.ReadInt32();
            break;
          }
          case 24: {
            RingFingerPosition = input.ReadInt32();
            break;
          }
          case 32: {
            LittleFingerPosition = input.ReadInt32();
            break;
          }
          case 40: {
            ThumbFingerPosition = input.ReadInt32();
            break;
          }
          case 48: {
            Delay = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PointerFingerPosition = input.ReadInt32();
            break;
          }
          case 16: {
            MiddleFingerPosition = input.ReadInt32();
            break;
          }
          case 24: {
            RingFingerPosition = input.ReadInt32();
            break;
          }
          case 32: {
            LittleFingerPosition = input.ReadInt32();
            break;
          }
          case 40: {
            ThumbFingerPosition = input.ReadInt32();
            break;
          }
          case 48: {
            Delay = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class UpdateLastTimeSync : pb::IMessage<UpdateLastTimeSync>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UpdateLastTimeSync> _parser = new pb::MessageParser<UpdateLastTimeSync>(() => new UpdateLastTimeSync());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateLastTimeSync> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HandControl.Model.Protobuf.GesturesReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateLastTimeSync() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateLastTimeSync(UpdateLastTimeSync other) : this() {
      lastTimeSync_ = other.lastTimeSync_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateLastTimeSync Clone() {
      return new UpdateLastTimeSync(this);
    }

    /// <summary>Field number for the "last_time_sync" field.</summary>
    public const int LastTimeSyncFieldNumber = 1;
    private long lastTimeSync_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long LastTimeSync {
      get { return lastTimeSync_; }
      set {
        lastTimeSync_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateLastTimeSync);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateLastTimeSync other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (LastTimeSync != other.LastTimeSync) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (LastTimeSync != 0L) hash ^= LastTimeSync.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (LastTimeSync != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(LastTimeSync);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (LastTimeSync != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(LastTimeSync);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (LastTimeSync != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(LastTimeSync);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateLastTimeSync other) {
      if (other == null) {
        return;
      }
      if (other.LastTimeSync != 0L) {
        LastTimeSync = other.LastTimeSync;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            LastTimeSync = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            LastTimeSync = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
